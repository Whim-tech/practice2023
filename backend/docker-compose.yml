version: '3.1'
services:
  mongo:
    image: mongo
    restart: always
    volumes:
      - ./db-data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DBNAME}
    networks:
      - my-network
  api:
    build:
      context: .
      dockerfile: ./Dockerfile.dev
    # restart: on-failure
    depends_on:
      - mongo
    volumes:
      - ./:/usr/src/app:cached
      - npm_cache:/root/.npm:delegated
      - node_modules:/usr/src/app/node_modules:delegated
    ports:
      - ${PORT}:${PORT}
    environment:
      PORT: ${PORT}
      NODE_ENV: ${NODE_ENV}
      MONGO_HOST: ${MONGO_HOST}
      MONGO_USERNAME: ${MONGO_USERNAME}
      MONGO_PASSWORD: ${MONGO_PASSWORD}
      MONGO_PORT: ${MONGO_PORT}
      MONGO_DBNAME: ${MONGO_DBNAME}
    networks:
      - my-network

  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express
    restart: unless-stopped
    ports:
      - "8081:8081"
    depends_on:
      - mongo
    networks:
      - my-network
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_PASSWORD}
      ME_CONFIG_MONGODB_SERVER: ${MONGO_HOST}
      

networks:
  my-network:
    driver: bridge
volumes:
  npm_cache:
  node_modules:
